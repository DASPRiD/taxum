{
    "name": "@taxum/core",
    "version": "0.3.0",
    "type": "module",
    "author": "Ben Scholzen 'DASPRiD'",
    "license": "BSD-3-Clause",
    "keywords": [
        "node",
        "typescript",
        "server",
        "http"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/dasprid/taxum.git"
    },
    "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "test": "tsx --test --test-reporter=spec",
        "test:ci": "c8 --reporter=lcov pnpm test",
        "typecheck": "tsc --noEmit"
    },
    "exports": {
        "./extract": {
            "types": [
                "./dist/extract/index.d.ts",
                "./src/extract/index.ts"
            ],
            "taxum": "./src/extract/index.ts",
            "default": "./dist/extract/index.js"
        },
        "./http": {
            "types": [
                "./dist/http/index.d.ts",
                "./src/http/index.ts"
            ],
            "taxum": "./src/http/index.ts",
            "default": "./dist/http/index.js"
        },
        "./logger": {
            "types": [
                "./dist/logger/index.d.ts",
                "./src/logger/index.ts"
            ],
            "taxum": "./src/logger/index.ts",
            "default": "./dist/logger/index.js"
        },
        "./layer/cors": {
            "types": [
                "./dist/layer/cors/index.d.ts",
                "./src/layer/cors/index.ts"
            ],
            "taxum": "./src/layer/cors/index.ts",
            "default": "./dist/layer/cors/index.js"
        },
        "./layer/client-ip": {
            "types": [
                "./dist/layer/client-ip.d.ts",
                "./src/layer/client-ip.ts"
            ],
            "taxum": "./src/layer/client-ip.ts",
            "default": "./dist/layer/client-ip.js"
        },
        "./layer/compression": {
            "types": [
                "./dist/layer/compression.d.ts",
                "./src/layer/compression.ts"
            ],
            "taxum": "./src/layer/compression.ts",
            "default": "./dist/layer/compression.js"
        },
        "./layer/decompression": {
            "types": [
                "./dist/layer/decompression.d.ts",
                "./src/layer/decompression.ts"
            ],
            "taxum": "./src/layer/decompression.ts",
            "default": "./dist/layer/decompression.js"
        },
        "./layer/from-fn": {
            "types": [
                "./dist/layer/from-fn.d.ts",
                "./src/layer/from-fn.ts"
            ],
            "taxum": "./src/layer/from-fn.ts",
            "default": "./dist/layer/from-fn.js"
        },
        "./layer/limit": {
            "types": [
                "./dist/layer/limit.d.ts",
                "./src/layer/limit.ts"
            ],
            "taxum": "./src/layer/limit.ts",
            "default": "./dist/layer/limit.js"
        },
        "./layer/request-id": {
            "types": [
                "./dist/layer/request-id.d.ts",
                "./src/layer/request-id.ts"
            ],
            "taxum": "./src/layer/request-id.ts",
            "default": "./dist/layer/request-id.js"
        },
        "./layer/set-status": {
            "types": [
                "./dist/layer/set-status.d.ts",
                "./src/layer/set-status.ts"
            ],
            "taxum": "./src/layer/set-status.ts",
            "default": "./dist/layer/set-status.js"
        },
        "./routing": {
            "types": [
                "./dist/routing/index.d.ts",
                "./src/routing/index.ts"
            ],
            "taxum": "./src/routing/index.ts",
            "default": "./dist/routing/index.js"
        },
        "./server": {
            "types": [
                "./dist/server/index.d.ts",
                "./src/server/index.ts"
            ],
            "taxum": "./src/server/index.ts",
            "default": "./dist/server/index.js"
        }
    },
    "dependencies": {
        "@standard-schema/spec": "^1.0.0",
        "find-my-way": "^9.3.0",
        "nested-search-params": "^1.0.0",
        "ts-pattern": "^5.8.0",
        "whatwg-mimetype": "^4.0.0"
    },
    "devDependencies": {
        "@types/whatwg-mimetype": "^3.0.2",
        "node-mock-http": "^1.0.2",
        "zod": "^4.0.14"
    }
}
